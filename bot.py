import telebot
from telebot import types
import schedule
import time
import datetime
import threading

TOKEN = "8334888358:AAG4XN5T-sYker_C0Dar8_ujRyMbNduqIOA"
bot = telebot.TeleBot(TOKEN)

# ===== –¢–µ–∫—Å—Ç—ã =====
WELCOME_TEXT = """
<b>–ë–æ—Ç-–∫—É—Ä—Å –ø–æ–≤—ã—à–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–º–∞</b>  

–ó–∞—á–µ–º –Ω—É–∂–µ–Ω –æ–ø—Ç–∏–º–∏–∑–º?
–£—á–µ–Ω—ã–µ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞–Ω –∏–∑—É—á–∞—é—Ç, —á—Ç–æ –∂–µ –¥–µ–ª–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫–∞ —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ, —É–ª—É—á—à–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –∂–∏–∑–Ω–∏ –∏ –∑–¥–æ—Ä–æ–≤—å—è.
–†–∞–∑–ª–∏—á–Ω—ã–µ –Ω–∞—É—á–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–¥–µ–ª—è—é—Ç —Ç–∞–∫–∏–µ —Ñ–∞–∫—Ç–æ—Ä—ã, –∫–∞–∫: 
-–ø–æ–Ω–∏–º–∞–Ω–∏–µ —Å–≤–æ–∏—Ö –∂–µ–ª–∞–Ω–∏–π
-–∂–∏–∑–Ω—å –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å–æ —Å–≤–æ–∏–º–∏ —Ü–µ–Ω–Ω–æ—Å—Ç—è–º–∏
-–Ω–∞–ª–∏—á–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Å–º—ã—Å–ª–∞
-–ø–æ–∑–∏—Ç–∏–≤–Ω–æ–µ –æ—Ç–Ω–æ—à–µ–Ω–∏–µ –∫ —Å–µ–±–µ, –¥—Ä—É–≥–∏–º, –∫ –∂–∏–∑–Ω–∏  
–ù–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–º –º—ã –∏ –æ—Å—Ç–∞–Ω–æ–≤–∏–º—Å—è —Å –≤–∞–º–∏, –∞ –∏–º–µ–Ω–Ω–æ, –Ω–∞ –æ–ø—Ç–∏–º–∏–∑–º–µ.

–ü–æ –º–Ω–æ–≥–∏–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è–º, –æ–ø—Ç–∏–º–∏–∑–º –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω–æ –º–µ–Ω—è–µ—Ç –∂–∏–∑–Ω—å –∫ –ª—É—á—à–µ–º—É.
–û–ø—Ç–∏–º–∏–∑–º - —ç—Ç–æ –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–π –≤–∑–≥–ª—è–¥ –Ω–∞ –∂–∏–∑–Ω—å, –≤–µ—Ä–∞ –≤ –±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω—ã–π –∏—Å—Ö–æ–¥ —Å–æ–±—ã—Ç–∏–π –∏ –≤ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ —Å–∏–ª—ã, –∞ —Ç–∞–∫–∂–µ –∂–∏–∑–Ω–µ—Ä–∞–¥–æ—Å—Ç–Ω–æ–µ –º–∏—Ä–æ–æ—â—É—â–µ–Ω–∏–µ. –ü—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏, —ç—Ç–æ –ø—Ä–∏–≤—ã—á–∫–∞ –Ω–∞—Ö–æ–¥–∏—Ç—å —Ö–æ—Ä–æ—à–µ–µ, —á–µ–º—É –º–æ–∂–Ω–æ —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è. –≠—Ç—É –ø—Ä–∏–≤—ã—á–∫—É –º–æ–∂–Ω–æ –∏ –ø–æ–ª–µ–∑–Ω–æ —Ä–∞–∑–≤–∏–≤–∞—Ç—å.
–ò–º–µ–Ω–Ω–æ —ç—Ç–∏–º –º—ã –∏ –∑–∞–π–º–µ–º—Å—è.

–ö–∞–∫ –∏–∑–≤–µ—Å—Ç–Ω–æ, —ç–º–æ—Ü–∏–∏ –ø–æ–¥–ø–∏—Ç—ã–≤–∞—é—Ç—Å—è –º—ã—Å–ª—è–º–∏.
–ó–¥–µ—Å—å, —Å –Ω–∞–º–∏, –í—ã –±—É–¥–µ—Ç–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è!
–î–∞, –¥–∞, –∏–º–µ–Ω–Ω–æ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∞—Ç—å—Å—è, –≤–µ–¥—å —Ä–∞–¥–æ–≤–∞—Ç—å—Å—è –∏–ª–∏ –≥—Ä—É—Å—Ç–∏—Ç—å - —ç—Ç–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π —Å—Ç–µ–ø–µ–Ω–∏ –ü–†–ò–í–´–ß–ö–ê –±—ã—Ç—å –æ–ø—Ç–∏–º–∏—Å—Ç–æ–º.
–û–ø—Ç–∏–º–∏—Å—Ç—ã –Ω–∞—Ö–æ–¥—è—Ç –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –ø–æ–≤–æ–¥—ã –¥–ª—è —Ä–∞–¥–æ—Å—Ç–∏, –≤ —Ç–æ –≤—Ä–µ–º—è –∫–∞–∫ –ø–µ—Å—Å–∏–º–∏—Å—Ç—ã –≤ —Ä–µ–∞–ª—å–Ω–æ—Å—Ç–∏ –ø—Ä–∏–≤—ã–∫–ª–∏ –∑–∞–º–µ—á–∞—Ç—å –≥—Ä—É—Å—Ç–Ω—ã–µ –º–æ–º–µ–Ω—Ç—ã.
–ê –∏–º–µ–Ω–Ω–æ —Ä–∞–¥–æ—Å—Ç—å –∏ –æ–ø—Ç–∏–º–∏–∑–º —É–ª—É—á—à–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –∂–∏–∑–Ω—å –≤ —Ü–µ–ª–æ–º.

–û –∫—É—Ä—Å–µ.
–ë–æ—Ç –∫—É—Ä—Å –ø–æ–≤—ã—à–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–º–∞ –¥–ª–∏—Ç—Å—è —Ç—Ä–∏ –¥–Ω—è.
–£—Ç—Ä–æ–º –≤–∞–º –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å –∑–∞–¥–∞–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –∑–∞ –¥–µ–Ω—å.
–í –∫–æ–Ω—Ü–µ –¥–Ω—è –æ—Ü–µ–Ω–∏—Ç—å —Å–≤–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â–µ–µ –∑–∞–¥–∞–Ω–∏–µ —É—Ç—Ä–æ–º.

–ì–æ—Ç–æ–≤—ã –∫ –±–æ—Ç –∫—É—Ä—Å—É –ø–æ–≤—ã—à–µ–Ω–∏—è –æ–ø—Ç–∏–º–∏–∑–º–∞?
"""

TASK_1 = "–ó–∞–¥–∞–Ω–∏–µ 1"
TASK_2 = "–ó–∞–¥–∞–Ω–∏–µ 2"
TASK_3 = "–ó–∞–¥–∞–Ω–∏–µ 3"
QUESTION = "–í—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å —Å –∑–∞–¥–∞–Ω–∏–µ–º?"
SORRY_TEXT = "–û—á–µ–Ω—å –∂–∞–ª—å üòø. –ü–æ–ø—Ä–æ–±—É–µ–º –µ—â—ë —Ä–∞–∑ –∑–∞–≤—Ç—Ä–∞!"
THANKS_TEXT = "–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ! üéâ"

# –ó–¥–µ—Å—å –±—É–¥–µ–º —Ö—Ä–∞–Ω–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# –§–æ—Ä–º–∞—Ç: {chat_id: {"task": int, "active": bool}}
# task = 0 (–µ—â—ë –Ω–µ –Ω–∞—á–∞–ª–∏), 1, 2, 3...
user_state = {}

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@bot.message_handler(commands=["start"])
@bot.message_handler(func=lambda m: m.text and m.text.lower() == "–Ω–∞—á–∞—Ç—å")
def start_message(message):
    chat_id = message.chat.id
    user_state[chat_id] = {"task": 0, "active": False}

    markup = types.InlineKeyboardMarkup()
    btn_yes = types.InlineKeyboardButton("–î–∞", callback_data="ready_yes")
    btn_no = types.InlineKeyboardButton("–ù–µ—Ç", callback_data="ready_no")
    markup.add(btn_yes, btn_no)

    bot.send_message(chat_id, WELCOME_TEXT, parse_mode="HTML", reply_markup=markup)

#  –û—Ç–≤–µ—Ç—ã –Ω–∞ –∫–Ω–æ–ø–∫–∏ "–î–∞" / "–ù–µ—Ç"
@bot.callback_query_handler(func=lambda call: call.data in ["ready_yes", "ready_no"])
def callback_ready(call):
    chat_id = call.message.chat.id

    if call.data == "ready_yes":
        bot.send_message(chat_id,
                         "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ú—ã —Ä–∞–¥—ã –≤–∞—à–µ–º—É —É—á–∞—Å—Ç–∏—é! "
                         "–ó–∞–≤—Ç—Ä–∞ —É—Ç—Ä–æ–º –≤–∞–º –ø—Ä–∏–¥–µ—Ç –∑–∞–¥–∞–Ω–∏–µ. –•–æ—Ä–æ—à–µ–≥–æ –≤–∞–º –¥–Ω—è!")
        user_state[chat_id]["active"] = True
        user_state[chat_id]["task"] = 0  # –ø–æ–∫–∞ –Ω–µ—Ç –∑–∞–¥–∞–Ω–∏–π, –Ω–∞—á–Ω—ë–º –∑–∞–≤—Ç—Ä–∞

    elif call.data == "ready_no":
        bot.send_message(chat_id,
                         "–°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –≤–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —Å–Ω–æ–≤–∞.\n"
                         "–ö–æ–≥–¥–∞ –∑–∞—Ö–æ—Ç–∏—Ç–µ –Ω–∞—á–∞—Ç—å –∫—É—Ä—Å, –Ω–∞–ø–∏—à–∏—Ç–µ '–ù–∞—á–∞—Ç—å'. –£–¥–∞—á–∏ –≤–∞–º! ‚ú®")
        user_state[chat_id]["active"] = False
        user_state[chat_id]["task"] = 0

# --- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–¥–∞–Ω–∏—è –∏–ª–∏ –≤–æ–ø—Ä–æ—Å–∞ ---
def morning_job():
    now = datetime.datetime.now().strftime("%Y-%m-%d %H:%M")
    print(f"[{now}] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")

    for chat_id, state in user_state.items():
        task = state["task"]
        active = state["active"]

        if not active:
            continue  # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º

        if task == 0:  
            # –ü–µ—Ä–≤—ã–π –¥–µ–Ω—å ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ó–∞–¥–∞–Ω–∏–µ 1
            bot.send_message(chat_id, TASK_1)
            state["task"] = 1

        elif task in [1, 2, 3]:
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º, —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å –ª–∏ —Å –∑–∞–¥–∞–Ω–∏–µ–º
            markup = types.InlineKeyboardMarkup()
            btn_yes = types.InlineKeyboardButton("–î–∞", callback_data="yes")
            btn_no = types.InlineKeyboardButton("–ù–µ—Ç", callback_data="no")
            markup.add(btn_yes, btn_no)
            bot.send_message(chat_id, QUESTION, reply_markup=markup)

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏ ---
@bot.callback_query_handler(func=lambda call: call.data in ["yes", "no"])
def handle_answer(call):
    chat_id = call.message.chat.id
    state = user_state.get(chat_id, {"task": 0, "active": False})

    if not state["active"]:
        return

    if call.data == "yes":
        if state["task"] == 1:
            bot.send_message(chat_id, TASK_2)
            state["task"] = 2

        elif state["task"] == 2:
            bot.send_message(chat_id, TASK_3)
            state["task"] = 3

        elif state["task"] == 3:
            bot.send_message(chat_id, THANKS_TEXT)
            state["active"] = False  # –∫—É—Ä—Å –∑–∞–≤–µ—Ä—à—ë–Ω

    elif call.data == "no":
        bot.send_message(chat_id, SORRY_TEXT)
        # –æ—Å—Ç–∞—ë–º—Å—è –Ω–∞ —Ç–æ–º –∂–µ –∑–∞–¥–∞–Ω–∏–∏, –∫—É—Ä—Å –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è

    user_state[chat_id] = state
    bot.answer_callback_query(call.id)

# --- –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫: –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00 ---
schedule.every().day.at("04:00").do(morning_job)

print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –ñ–¥—ë–º 9 —É—Ç—Ä–∞...")

# --- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ---
def run_schedule():
    while True:
        schedule.run_pending()
        time.sleep(1)

# –∑–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ —Å polling
threading.Thread(target=run_schedule, daemon=True).start()

# –æ—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å ‚Äî —Å–ª—É—à–∞–µ—Ç –∫–æ–º–∞–Ω–¥—ã
bot.polling(none_stop=True, interval=0, timeout=20)


